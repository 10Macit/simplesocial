//
//  PostsPresenter.swift
//  simplesocial
//
//  Created Samet Macit on 13.08.2022.
//  Copyright © 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PostsPresenter: PostsPresenterProtocol, PostsInteractorOutputProtocol {

    weak private var view: PostsViewProtocol?
    var interactor: PostsInteractorInputProtocol?
    private let router: PostsWireframeProtocol

    private var users: [User] = []
    private var selectedUser: User?
    
    init(interface: PostsViewProtocol, interactor: PostsInteractorInputProtocol?, router: PostsWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension PostsPresenter {
    
    func viewDidLoad() {
        interactor?.fetchPosts()
        interactor?.fetchUsers()
    }
    
    func presentPosts(posts: [Post]) {
        let viewModels: [PostViewModel] = posts.map({
            .init(imageName: "person.crop.circle.fill",
                  name: $0.user.name,
                  userName: "@" + $0.user.username,
                  content: $0.text,
                  contentImageURL: URL(string: $0.image ))
        })
        view?.presentPost(viewModels: viewModels)
    }
    
    func presentUsers(users: [User]) {
        self.users = users
        selectedUser = users.first
        let viewModel: UserViewModel = .init(userName: selectedUser?.username ?? "")
        view?.presentUser(viewModel: viewModel)
        view?.presentUsers(viewModels: users.map({$0.username}))
    }
    
    func selectUser(at index: Int) {
        selectedUser = users[index]
        if let selectedUser = selectedUser {
            let viewModel: UserViewModel = .init(userName: selectedUser.username)
            view?.presentUser(viewModel: viewModel)
        }
    }
    
    func presentCreateScreen() {
        if let selectedUser = selectedUser {
            router.routeToCreatePost(delegate: self, selectedUser: selectedUser)
        }
    }
    
}

extension PostsPresenter: CreatePostDelegate {
    func didSavePost() {
        interactor?.fetchPosts()
    }
}
